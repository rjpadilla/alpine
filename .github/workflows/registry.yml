name: publish

on: [push]

jobs:
  compare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
            
      - name: Log in to the Container registries
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}

      - name: Build docker image
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          source .github/workflows/utils.sh
          docker run --privileged --rm docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
          version="3.12"
          repo="rjpadilla/alpine"
          alpine_x86_sha=$(get_variant_sha "alpine" "$version" "amd64")
          echo $alpine_x86_sha
          variant_alpine_x86_sha=$(get_manifest_sha "$repo:latest" "amd64")
          echo $variant_alpine_x86_sha
          echo "arm"
          balena_rpi_sha=$(get_tag_sha "balenalib/raspberry-pi-alpine" "$version")
          echo $balena_rpi_sha
          variant_rpi_sha=$(get_manifest_sha "$repo:latest" "arm")
          echo $variant_rpi_sha
          echo "arm64"
          alpine_arm64_sha=$(get_variant_sha "alpine" "$version" "arm64")
          echo $alpine_arm64_sha
          variant_alpine_arm64_sha=$(get_manifest_sha "$repo:latest" "arm64")
          echo $variant_alpine_arm64_sha
          echo "change"
          flag=$(compare_sha  "$alpine_x86_sha" "$variant_alpine_x86_sha" "$balena_rpi_sha" "$variant_rpi_sha" "$alpine_arm64_sha" "$variant_alpine_arm64_sha")
          echo $flag
          echo "FLAG=$flag" >> $GITHUB_ENV

  images:
    needs: compare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm, arm64]
    steps:
      - name: Log in to the Container registries
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      
      - name: Build docker image
        if: ${{ env.FLAG }}
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker run --privileged --rm docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
          version="3.12"
          case ${{ matrix.arch }} in
            amd64) : "amd64/alpine:$version" ;;
            arm) : "balenalib/raspberry-pi-alpine:$version" ;;
            arm64) : "arm64v8/alpine:$version" ;;
          esac
          image="$_"
          repo="rjpadilla/alpine-tags:${{ matrix.arch }}"
          date="$(date +%Y%m%d%H%M)"
          docker build build -t ghcr.io/$repo --build-arg IMAGE=$image . 
          docker build -t docker.io/$repo --build-arg IMAGE=$image . 
          docker tag ghcr.io/$repo ghcr.io/$repo-$date
          docker tag docker.io/$repo docker.io/$repo-$date
          docker push ghcr.io/$repo
          docker push docker.io/$repo
          docker push ghcr.io/$repo-$date
          docker push docker.io/$repo-$date
          docker images