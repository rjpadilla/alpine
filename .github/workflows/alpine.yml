name: build image

on: [push] 

jobs:
  images:
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.set-build.outputs.build }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm, arm64]
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: container registries
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      - name: docker image
        id: set-build
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          # docker run --privileged --rm docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
          version="3.14"
          case ${{ matrix.arch }} in
            amd64) : "amd64/alpine:$version" ;;
            arm) : "balenalib/raspberry-pi-alpine:$version" ;;
            arm64) : "arm64v8/alpine:$version" ;;
          esac
          image="$_"
          repo="rjpadilla/alpine-tags"
          dest="$repo:${{ matrix.arch }}"
          date="$(date +%Y%m%d%H%M)"
          # docker buildx build -t ghcr.io/$dest --build-arg IMAGE=$image .
          # docker build --platform linux/${{ matrix.arch }} -t ghcr.io/$dest --build-arg IMAGE=$image .
          docker build -t ghcr.io/$dest --build-arg IMAGE=$image .
          docker tag ghcr.io/$dest docker.io/$dest
          docker tag ghcr.io/$dest ghcr.io/$dest-$date
          docker tag docker.io/$dest docker.io/$dest-$date
          docker push --all-tags ghcr.io/$repo
          docker push --all-tags docker.io/$repo
          docker images
          echo "::set-output name=build::true"
  manifests:
    needs: images
    strategy:
      fail-fast: false
      matrix:
        registry: [docker.io, ghcr.io]
    runs-on: ubuntu-latest
    outputs:
      send: ${{ steps.set-send.outputs.send }}
    steps:
      - name: container registries
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      - name: create manifests
        if: ${{ needs.images.outputs.build }}
        id: set-send
        run: |
          repo="${{ matrix.registry }}/rjpadilla/alpine"
          date="$(date +%Y%m%d%H%M)"
          docker manifest create $repo:latest $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
          docker manifest create $repo:$date $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
          # docker manifest annotate $repo:latest $repo-tags:arm --os linux --arch arm --variant ''
          # docker manifest annotate $repo:$date $repo-tags:arm --os linux --arch arm --variant ''
          docker manifest annotate $repo:latest $repo-tags:arm64 --os linux --arch arm 
          # docker manifest annotate $repo:$date $repo-tags:arm64 --os linux --arch arm64 --variant ''
          docker manifest inspect $repo:latest
          docker manifest push $repo:latest
          docker manifest push $repo:$date
          echo "::set-output name=send::true"
